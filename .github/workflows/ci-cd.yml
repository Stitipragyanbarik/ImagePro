name: ImagePro CI/CD 

# When to run this workflow
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Job 1: Check if code builds successfully
  build-and-test:
    runs-on: ubuntu-latest
    name: Build and Test

    steps:
    # Step 1: Get the code
    - name: Get code from repository
      uses: actions/checkout@v4

    # Step 2: Setup Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    # Step 3: Install backend dependencies
    - name: Install Backend Dependencies
      run: |
        cd SERVER
        npm install

    # Step 4: Install frontend dependencies
    - name: Install Frontend Dependencies
      run: |
        cd client
        npm install

    # Step 5: Check if backend builds
    - name: Check Backend Build
      run: |
        cd SERVER
        echo "‚úÖ Backend dependencies installed successfully"

    # Step 6: Check if frontend builds
    - name: Check Frontend Build
      run: |
        cd client
        npm run build
        echo "‚úÖ Frontend built successfully"

  # Job 2: Build Docker containers (only on main branch)
  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test
    name: Build Docker Images
    if: github.ref == 'refs/heads/main'

    steps:
    # Step 1: Get the code
    - name: Get code from repository
      uses: actions/checkout@v4

    # Step 2: Install Docker Compose
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose version

    # Step 3: Build Docker images
    - name: Build Docker Images
      run: |
        echo "üê≥ Building Docker images..."
        docker-compose build
        echo "‚úÖ Docker images built successfully"

    # Step 4: Test Docker containers
    - name: Test Docker Containers
      run: |
        echo "üß™ Testing Docker containers..."
        docker-compose up -d
        sleep 30
        docker-compose ps
        docker-compose down
        echo "‚úÖ Docker containers tested successfully"
